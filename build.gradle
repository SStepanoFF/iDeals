buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.2.8")
    }
}

plugins {
    id "java"
    id "io.freefair.lombok" version "5.1.0"
    id "com.gitlab.et.paralleltests" version "1.0.2"
//    id "io.qameta.allure" version "2.6.0"
}

apply plugin: 'net.serenity-bdd.aggregator'

//Project info
group = 'iDeals'
version = '1.0-SNAPSHOT'
description = 'iDeals QA Automation tasks'
sourceCompatibility = 8
targetCompatibility = 8

//Build variables
ext {
    junitJupiterApiVersion = "5.3.1"
    slf4jVersion = "1.7.30"
    cucumberVersion = "4.2.0"
    serenityCucumberVersion = "1.0.12"
    serenityVersion = "2.0.48"
    restAssuredVersion = "4.2.0"
    jacksonCoreVersion = "2.11.2"
    hamcrestDateVersion = "2.0.7"
}

//Task configurations
defaultTasks 'clean', 'build'

test {
    doFirst {
        systemProperties System.getProperties()
    }
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
    afterSuite { desc, result ->
        if (!desc.parent) {
            logger.lifecycle "\nTest result: ${result.resultType}"
            logger.lifecycle "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
    finalizedBy 'aggregate'
//    finalizedBy 'allureReport'
}

testParallel {
//    test.systemProperties System.getProperties()
    printConfiguration = true
    parallelExecutions = 5
    cucumberCliClass = 'cucumber.api.cli.Main'
    glue ="ideals"
    featureDir= "src/test/resources/features/"
    printConfiguration = true
    strict = true
    printTestOutput = true
    tags = "not @skip"
    parallelScenarios = true
    cucumberPlugins = [
            "pretty",
            "default_summary",
            "junit:build/test-results/cucumber/cucumber-result.xml",
            "json:build/test-results/cucumber-json/cucumber.json",
            "junit:build/test-results/junit/junit.xml",
    ]
}

//task parallel {
//    doFirst {
//        System.properties  System.getProperties()
//    }
//    finalizedBy 'aggregate'
//}

// Allure settings
//allure {
//    version = "2.7.0"
//    resultsDir = file('allure-results')
//    reportDir = file('allure-reports')
//    clean = true
//}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitJupiterApiVersion}"
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitJupiterApiVersion}"
    compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: "${slf4jVersion}"
    compile group: 'net.serenity-bdd', name: 'serenity-cucumber4', version: "${serenityCucumberVersion}"
    compile group: 'net.serenity-bdd', name: 'serenity-core', version: "${serenityVersion}"
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: "${restAssuredVersion}"
    compile group: 'io.cucumber', name: 'cucumber-core', version: "${cucumberVersion}"
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: "${cucumberVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonCoreVersion}"
    testCompile group: 'org.exparity', name: 'hamcrest-date', version: "${hamcrestDateVersion}"

//    compile group: 'io.qameta.allure', name: 'allure-cucumber4-jvm', version: "2.12.1'"//"${allureVersion}"
}

gradle.startParameter.continueOnFailure = true
//aggregate.dependsOn tasks.testParallel